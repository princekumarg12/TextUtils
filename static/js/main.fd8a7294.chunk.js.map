{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","React","createElement","className","type","role","msg","data-bs-dismiss","aria-label","Navbar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","id","style","aria-current","onClick","toggleMode","htmlFor","TextForm","text","setText","useState","background","color","heading","rows","value","onChange","e","target","handleUpClick","toUpperCase","editAlert","handleDownClick","toLowerCase","handleClearClick","handleCopyClick","document","getElementById","select","navigator","clipboard","writeText","split","length","defaultProps","App","setMode","setAlert","message","setTimeout","Fragment","body","backgroundColor","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.fd8a7294.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Alert(props) {\n    return (\n\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n            <strong>{props.alert.msg} : {props.alert.type}</strong>!\n            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n        </div>\n    )\n}\n\nexport default Alert\n","import React from \"react\";\nimport PropTypes from 'prop-types';\n// import { Link } from 'react-router-dom';\n\nexport default function Navbar(props) {\n  return (\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n      <div className=\"container-fluid\">\n        <a className=\"navbar-brand\" href=\"/\">\n          {props.title}\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarScroll\"\n          aria-controls=\"navbarScroll\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarScroll\">\n          <ul\n            className=\"navbar-nav me-auto my-2 my-lg-0 navbar-nav-scroll\"\n            style={{ \"--bs-scroll-height\": \"100px\" }}\n          >\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\n                Home\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"/about\">\n                About\n              </a>\n            </li>\n          </ul>\n          <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              onClick={props.toggleMode}\n              id=\"flexSwitchCheckDefault\"\n            />\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Toggle Mode</label>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nNavbar.propTypes = {\n  title: PropTypes.string\n};\n\nNavbar.defaultProps = {\n  title: \"Default Title\"\n};\n","import React, { useState } from \"react\";\nexport default function TextForm(props) {\n  const [text, setText] = useState(\"\");\n  const handleUpClick = () => {\n    setText(text.toUpperCase())\n    props.editAlert(\"Text set to Uppercase\", \"success\");\n  };\n  const handleOnChange = (e) => { setText(e.target.value) }\n  const handleDownClick = () => { setText(text.toLowerCase()) \n    props.editAlert(\"Text set to Lowercase\", \"success\");\n  }\n  const handleClearClick = () => { setText(\"\") \n    props.editAlert(\"All text cleared\", \"danger\");\n  }\n  const handleCopyClick = () => {\n    var text = document.getElementById(\"textBox\");\n    text.select();\n    navigator.clipboard.writeText(text.value);\n    props.editAlert(\"Text copied to clipboard\", \"info\");\n  }\n\n  return (\n    <div className=\"container my-4\" style={{ background: props.mode === 'dark' ? \"#403f3f\" : \"white\", color: props.mode === \"dark\" ? \"white\" : \"black\", }}>\n      <div className=\"form-floating\">\n        <h1>{props.heading}</h1>\n        <div className=\"mb-3\">\n          <textarea\n            className=\"form-control\"\n            id=\"textBox\"\n            rows=\"8\"\n            value={text}\n            onChange={handleOnChange}\n            style={{ background: props.mode === 'dark' ? \"#403f3f\" : \"white\", color: props.mode === \"dark\" ? \"white\" : \"black\" }}\n          ></textarea>\n        </div>\n        <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to Uppercase</button>\n        <button className=\"btn btn-primary mx-1\" onClick={handleDownClick}>Convert to lowercase</button>\n        <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear</button>\n        <button className=\"btn btn-primary mx-1\" onClick={handleCopyClick}>Copy</button>\n        <div className=\"my-3\">\n          <h5>Your Text Summary</h5>\n          <p>{text.split(\" \").length} word and {text.length} characters</p>\n        </div>\n        <div className=\"my-3\">\n          <h4>Preview</h4>\n          <p>{text}</p>\n        </div>\n      </div>\n    </div>\n  );\n}","import React, { useState } from \"react\";\n// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport './App.css';\n// import About from './components/About';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const editAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"black\";\n      editAlert(\"Dark mode is enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      editAlert(\"Light mode is enabled\", \"success\");\n    }\n  }\n\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title='TextUtils' mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <TextForm editAlert={editAlert} heading=\"Enter the Text\" mode={mode} />\n        {/* <Routes> */}\n          {/* <Route path=\"/about\" element={<About />} /> */}\n          {/* <Route path=\"/\" element={<TextForm editAlert={editAlert} heading=\"Enter the Text\" mode={mode} />} /> */}\n        {/* </Routes> */}\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}